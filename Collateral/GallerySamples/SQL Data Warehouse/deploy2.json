{
    "contentVersion": "1.0.0.0",
    "$schema": "httpmarketingRawTable://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "parameters": {
        "unique": {
            "type": "string",
            "defaultValue": "rba4",
            "metadata": {
                "description": "Suffix for deployed resources"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "West US",
            "allowedValues": [
                "South Central US",
                "West Europe",
				"West US"
            ],
            "metadata": {
                "description": "Location to deploy resources"
            }
        },
		"storagelocation": {
			"type": "string",
			"defaultValue": "centralus"
		},
        "solAccType": {
            "type": "string",
            "defaultValue": "personal",
            "allowedValues": [
                "personal",
                "predictive",
                "mbl",
				"other"
            ]
        }
    },
    "variables": {
        "solutionAccSettings": {
            "personal": {
                "title": "personal",
                "datafactorySettings": {
                    "ETLHiveActivityQuery": "ETLQuery.hql",
                    "inputSerilization": {
                        "type": "json",
                        "properties": {
                            "encoding": "UTF8"
                        }
                    },
					"outputSerilization": {
                        "type": "CSV",
                        "properties": {
                            "fieldDelimiter": ",",
                            "encoding": "UTF8"
                        }
                    }
                },
                "azureMLSettings": {
                    "azureMLEndpoint": "https://ussouthcentral.services.azureml.net/workspaces/bc14f3c64e8443a0af02b86aa1c4bbb2/services/d75d1a8f9fe2490b8f37ce509384ac4e/jobs",
                    "azureMLApiKey": "YPl/gAYPIF+BHV8LRRV22JnR0HWI03zNMj/KbZZH4ui4dpIAwZvy9D48xT3LdUag6pATQz6rLxPa1jNWmsH0lw=="
                }
            }
		},
        "currentSolAccSettings": "[variables('solutionAccSettings')[parameters('solAccType')]]",
        "paramVars": {
            "location": "[parameters('location')]",
            "accountType": "Standard-GRS",
            "scriptContainer": "scriptcontainer",
            "ETLHiveActivityQuery": "[variables('currentSolAccSettings')['datafactorySettings'].ETLHiveActivityQuery]"
        },
        "settings": {
            "apiVersion": {
                "storageAccountApiVersion": "2014-06-01",
                "serviceBusApiVersion": "2014-09-01",
                "sqlApiVersion": "2.0",
                "asaApiVersion": "2015-09-01",
                "azureMLApiVersion": "2015-09-01",
                "dataFactoryApiVersion": "2015-09-01"
            },
            "asaSettings": {
                "asaJobName": "[concat(variables('currentSolAccSettings').title,'streamanalytics',parameters('unique'))]",
                "asaLocation": "[parameters('location')]",
                "asaBlobContainer": "[concat(variables('currentSolAccSettings').title,'stream')]",
                "asaBlobPathPattern": "rawdata/{date}/{time}"
            },
            "datafactorySettings": {
                "dataFactoryName": "[concat(variables('currentSolAccSettings').title,'ADF',parameters('unique'))]",
                "dataFactoryLocation": "westus",
                "ETLHiveActivityQuery": "[variables('currentSolAccSettings')['datafactorySettings']].ETLHiveActivityQuery",
                "linkedServiceNames": {
                    "hdInsightLinkedServiceName": "HDInsightLinkedService",
                    "hdInsightStorageLinkedServiceName": "HDInsightStorageLinkedService",
                    "storageLinkedServiceName": "StorageLinkedService",
                    "azureSqlLinkedServiceName": "AzureSqlLinkedService",
                    "azureMLLinkedServiceName": "AzureMLLinkedService"
                },
                "adfTableNames": {
                    "RawTableName": "RawTable",
                    "ScoredResultADFTableName": "ScoredResultADFTable",
                    "ConsolidatedCSVTableName": "ConsolidatedCSVTable",
                    "SQLScoredResultTableName": "SQLScoredResultTable",
                    "ConsolidatedADFTableName": "ConsolidatedADFTable"
                },
                "dataNames": {
                    "RawDataName": "rawdata",
					"ADFTableName": "mladfdata",
                    "CSVTableName": "mlcsvdata",
                    "MLRESULTTableName": "mlresult",
					"SQLTableName": "MLResult"
                }

            },
            "sqlSettings": {
                "sqlServerName": "[concat(variables('currentSolAccSettings').title,'-',parameters('unique'))]",
                "sqlLocation": "[parameters('location')]",
                "sqlServerUserName": "[concat(variables('currentSolAccSettings').title,'user')]",
                "sqlServerPassword": "pass@word1",
                "sqlDatabaseName": "[concat(variables('currentSolAccSettings').title,'DB')]",
                "sqlMaxSizeBytes": "2147483648",
                "sqlStartIpAddress": "0.0.0.0",
                "sqlEndIpAddress": "255.255.255.255",
                "sqlEdition": "Basic",
                "sqlCollation": "SQL_Latin1_General_CP1_CI_AS"
            },
            "storageSettings": {
                "storageAccountName": "[concat(variables('currentSolAccSettings').title,'storeage',parameters('unique'))]"
            },
            "serviceBusSettings": {
                "serviceBusNamespaceName": "[concat(variables('currentSolAccSettings').title,'servicebus',parameters('unique'))]",
                "serviceBusIngestEventHubName": "[concat(variables('currentSolAccSettings').title,'eventhub',parameters('unique'))]",
                /*"serviceBusPublishEventHubName": "[concat(variables('currentSolAccSettings').title,'publish',parameters('unique'))]",*/
                "serviceBusSharedAccessPolicyName": "RootManageSharedAccessKey"
                /*"consumerGroupName": "streamConsumerGroup",*/
                /*"powerBIConsumerGroupName": "PowerBIConsumerGroup",*/
            }
        }
    },
    "resources": [
        /* Azure Stream Analytics */ {
            "apiVersion": "[variables('settings')['apiVersion'].asaApiVersion]",
            "type": "Microsoft.StreamAnalytics/streamingJobs",
            "name": "[variables('settings')['asaSettings'].asaJobName]",
            "location": "[variables('settings')['asaSettings'].asaLocation]",
            "properties": {
                "sku": {
                    "name": "standard"
                },
                "EventsOutOfOrderMaxDelayInSeconds": 10,
                "EventsOutOfOrderPolicy": "Adjust",
                "inputs": [
                    {
                        "name": "InputHub",
                        "properties": {
                            "type": "stream",
                            "serialization": "[variables('currentSolAccSettings')['datafactorySettings'].inputSerilization]",
                            "datasource": {
                                "type": "Microsoft.ServiceBus/EventHub",
                                "properties": {
                                    "EventHubName": "[variables('settings')['serviceBusSettings'].serviceBusIngestEventHubName]",
                                    "ServiceBusNamespace": "[variables('settings')['serviceBusSettings'].serviceBusNamespaceName]",
                                    "SharedAccessPolicyName": "[variables('settings')['serviceBusSettings'].serviceBusSharedAccessPolicyName]",
                                    "SharedAccessPolicyKey": "[listKeys(resourceid('Microsoft.Eventhub/namespaces/authorizationRules',variables('settings')['serviceBusSettings'].serviceBusNamespaceName,variables('settings')['serviceBusSettings'].serviceBusSharedAccessPolicyName ), variables('settings')['apiVersion'].serviceBusApiVersion).primaryKey]",
                                    "SourcePartitionCount": 16
                                    /*"consumerGroupName": "[variables('settings')['serviceBusSettings'].consumerGroupName]"*/
                                }
                            }
                        }
                    }
                ],
                "transformation": {
                    "name": "ProcessSampleData",
                    "properties": {
                        "streamingUnits": 1,
                        /*"query": "select user_id, state, product_id, product_name as 'product viewed', product_category,product_price as 'product price', ad_id, ad_name as 'ad shown', ad_category, ad_price as 'ad price', click, sampletime, EventProcessedUtcTime, PartitionId, EventEnqueuedUtcTime into OutputSQL from InputHub"*/
						"query": "select DateTime, EventId, Rating into OutputSQL from InputHub"
                    }
                },
                "outputs": [
					{
						"Name": "OutputSQL",
						"Properties": {
							"DataSource": {
								"Properties": {
									"Database": "[variables('settings')['sqlSettings'].sqlDatabaseName]",
									"Password": "[variables('settings')['sqlSettings'].sqlServerPassword]",
									"Server": "[variables('settings')['sqlSettings'].sqlServerName]",
									/*"Table": "streamdata",*/
									"Table": "ratings",
									"User": "[variables('settings')['sqlSettings'].sqlServerUserName]"
								},
								"Type": "Microsoft.Sql/Server/Database"
                            }
						}
                    }
                ]
            },
            "metadata": {
                "description": "Create the Stream Analtyics Resource"
            }
        }
    ]
}
